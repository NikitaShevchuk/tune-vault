// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// Always after the prisma-client-js generator
generator json {
  provider = "prisma-json-types-generator"
}

model Guild {
  // Values from Discord
  id       String   @id
  name     String
  joinedAt DateTime
  icon     String?

  // Application specific values
  activeUsers     User[]
  activeChannelId String?
  playQueueId     Int?
  playQueue       PlayQueue?
  activeMessageId String?
}

model PlayQueue {
  id      Int     @id @default(autoincrement())
  guildId String? @unique
  guild   Guild?  @relation(fields: [guildId], references: [id])
  /// [PlayQueueType]
  queue   Json    @default("[]")
}

model User {
  // Values from Discord
  id         String   @id
  username   String
  globalName String
  bot        Boolean
  createdAt  DateTime
  avatar     String?

  // Application specific values
  activeGuild   Guild?  @relation(fields: [activeGuildId], references: [id])
  activeGuildId String?
  role          Role    @default(user)
}

enum Role {
  admin @map("ADMIN")
  user  @map("USER")
}
